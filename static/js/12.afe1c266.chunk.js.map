{"version":3,"sources":["data/useInternship.js","components/AssignTeacherForm.js","data/useCareersList.js","components/InternshipDetail.js","components/InternshipReportDetail.js","data/useInternshipReport.js","components/InternshipReportsList.js","data/useInternshipReportsList.js","pages/InternshipPage.js","utils/translateMessage.js","components/ErrorList.js","components/ShowError.js","components/ReportStudentSectionForm.js","components/ReportStudentSectionFormModal.js"],"names":["useInternship","id","options","useSWR","API","fetcher","data","error","mutate","internship","isLoading","isError","Option","Select","formItemLayout","labelCol","xs","span","sm","wrapperCol","AssignTeacherForm","onSubmit","form","teacherId","careers","links","meta","useCareersList","useState","currentTeachers","setCurrentTeachers","console","log","name","initialValues","onFinish","Item","label","rules","required","message","placeholder","onChange","value","setFieldsValue","teachers","loading","map","career","confirm","Modal","Title","Typography","InternshipDetail","props","currentUser","useAuth","isSubmitting","setIsSubmitting","showAssignTeacherModal","setShowAssignTeacherModal","Form","useForm","assignTeacherForm","handleAssignTeacher","a","title","icon","ExclamationCircleOutlined","okText","cancelText","onOk","post","success","errorList","ErrorList","errors","translateMessage","onCancel","ShowError","bordered","column","moment","created_at","format","status","teacher","lastname","role","type","onClick","start_date","finish_date","institutional_agreement_code","institutional_agreement_name","research_project_code","research_project_name","social_project_code","social_project_name","orientation","student","email","phone","company","ruc","address","city","mobile","representative","job_title","visible","closable","maskClosable","confirmLoading","submit","destroyOnClose","teacher_id","InternshipReportDetail","internshipId","reportId","report","useInternshipReport","internship_id","customIcons","1","text","FrownFilled","2","3","MehFilled","4","SmileFilled","5","renderRate","disabled","defaultValue","character","index","className","extra","user_id","ReportStudentSectionFormModal","edit","from_date","to_date","hours_worked","area","activities","activity","i","key","description","student_observations","useful_topics","topicsBySubject","items","subject_id","push","subject_name","toUpperCase","topic","renderUsefulTopics","recommended_topics","evaluation_performance","evaluation_motivation","evaluation_knowledge","evaluation_punctuality","evaluation_observations","tutor_observations","tutor_recommends","CheckCircleTwoTone","twoToneColor","CloseCircleTwoTone","tutor_recommends_observations","tutor_knowledge_contribution","tutor_knowledge_contribution_observations","tutor_recommends_approval","tutor_recommends_approval_observations","tutor_followup_actions","tutor_improvement_actions","InternshipReportsList","reports","useInternshipReportsList","setReport","columns","dataIndex","render","internshipReport","handleViewReportDetail","dataSource","summary","totalHoursApproved","totalHoursPending","forEach","Summary","Row","Cell","colSpan","pagination","onClose","placement","width","withAuth","useParams","style","marginTop","marginBottom","showIcon","params","messageList","size","Object","values","errorMessage","renderItem","item","setStatus","subTitle","RangePicker","DatePicker","formItemLayoutWithOutLabel","offset","ReportStudentSectionForm","isFinalReport","setIsFinalReport","handleChangeHoursWorked","hours","sum_hours","hours_registered","hours_approved","dates","length","inputReadOnly","disabledDate","current","endOf","whitespace","min","hidden","enum","List","fields","add","remove","field","noStyle","TextArea","autoSize","maxRows","MinusCircleOutlined","margin","PlusOutlined","showModal","setShowModal","handleCreate","resetFields","handleEdit","put","align","EditOutlined"],"mappings":"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","file":"static/js/12.afe1c266.chunk.js","sourcesContent":["/**\n * Created by chalosalvador on 8/18/20\n */\nimport useSWR from 'swr';\nimport API from './index';\n\nexport const useInternship = ( id, options= {} ) => {\n  const { data, error, mutate } = useSWR( `/internships/${ id }`, API.fetcher, options );\n\n  return {\n    internship: data && data.data,\n    isLoading: !error && !data,\n    isError: error,\n    mutate\n  };\n};\n","/**\n * Created by chalosalvador on 9/16/20\n */\nimport React, { useState } from 'react';\nimport { Form, Select } from 'antd';\nimport { useCareersList } from '../data/useCareersList';\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 18 },\n    sm: { span: 6 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 20 },\n  },\n};\n\nconst AssignTeacherForm = ( { onSubmit, form, teacherId } ) => {\n  const { careers, isLoading, isError, mutate } = useCareersList();\n  const [ currentTeachers, setCurrentTeachers ] = useState( [] );\n  console.log( 'careers', careers );\n  const handleChangeCareer = ( value ) => {\n    form.setFieldsValue( { teacherId: null } );\n    setCurrentTeachers( careers[ value ].teachers );\n  };\n\n  return (\n    <Form form={ form } { ...formItemLayout }\n          name='assign-teacher' initialValues={ teacherId }\n          onFinish={ onSubmit }>\n      <Form.Item name='career_id' label='Carrera' rules={ [\n        {\n          required: true,\n          message: 'Selecciona una carrera...'\n        },\n      ] }>\n        <Select placeholder='Selecciona...' onChange={ handleChangeCareer } loading={ isLoading }>\n          { careers.map( ( career ) => <Option value={ career.id }>{ career.name }</Option> ) }\n        </Select>\n      </Form.Item>\n\n      <Form.Item name='teacherId' label='Profesor' rules={ [\n        {\n          required: true,\n          message: 'Selecciona un profesor...'\n        },\n      ] }>\n        <Select placeholder='Selecciona...' loading={ isLoading }>\n          { currentTeachers.map( ( career ) => <Option value={ career.id }>{ career.name }</Option> ) }\n        </Select>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default AssignTeacherForm;\n","/**\n * Created by chalosalvador on 8/18/20\n */\nimport useSWR from 'swr';\nimport API from './index';\n\nexport const useCareersList = () => {\n  const { data, error, mutate } = useSWR( '/careers', API.fetcher );\n\n  return {\n    careers: (data && data.data) || [] ,\n    links: data && data.links,\n    meta: data && data.meta,\n    isLoading: !error && !data,\n    isError: error,\n    mutate\n  };\n};\n","/**\n * Created by chalosalvador on 9/9/20\n */\nimport React, { useState } from 'react';\nimport { Descriptions, Typography, Divider, PageHeader, Button, message, Modal, Form, Select } from 'antd';\nimport moment from 'moment';\nimport { useAuth } from '../providers/Auth';\nimport API from '../data';\nimport ErrorList from './ErrorList';\nimport { translateMessage } from '../utils/translateMessage';\nimport { useInternship } from '../data/useInternship';\nimport ShowError from './ShowError';\nimport AssignTeacherForm from './AssignTeacherForm';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\n\nconst { confirm } = Modal;\nconst { Title } = Typography;\n\nconst InternshipDetail = ( props ) => {\n  const { internship, isLoading, isError, mutate } = useInternship( props.internship.id );\n  const { currentUser } = useAuth();\n  const [ isSubmitting, setIsSubmitting ] = useState( false );\n  const [ showAssignTeacherModal, setShowAssignTeacherModal ] = useState( false );\n  const [ assignTeacherForm ] = Form.useForm();\n\n  const handleAssignTeacher = async( { teacherId } ) => {\n    confirm( {\n        title: '¿Confirmas que deseas enviar el formulario?',\n        icon: <ExclamationCircleOutlined />,\n        // content: 'Se perderá toda la información ingresada.',\n        okText: 'Sí',\n        cancelText: 'No',\n        onOk: async() => {\n          try {\n            setIsSubmitting( true );\n            await API.post( `/internships/${ internship.id }/teacher/${ teacherId }` );\n            await mutate();\n            message.success( 'La práctica se ha autorizado correctamente.' );\n            setShowAssignTeacherModal( false );\n          } catch( e ) {\n            const errorList = e.error && <ErrorList errors={ e.error } />;\n            message.error( <>{ translateMessage( e.message ) }{ errorList }</> );\n          }\n          setIsSubmitting( false );\n        },\n        onCancel() {},\n      }\n    );\n  };\n\n  if( isLoading ) {\n    return <div>Cargando...</div>;\n  }\n\n  if( isError ) {\n    return <ShowError error={ isError } />;\n  }\n\n  return (\n    <>\n      <PageHeader title={ <Title>Detalles de la práctica</Title> } />\n\n      <Descriptions bordered column={ 2 }>\n        <Descriptions.Item label='Fecha de creación'>\n          { moment( internship.created_at ).format( 'DD/MM/YYYY HH:mm:ss' ) }\n        </Descriptions.Item>\n        <Descriptions.Item label='Estado'>{ internship.status }</Descriptions.Item>\n        <Descriptions.Item label='Tutor(a)'>\n          { internship.teacher\n            ? `${ internship.teacher.name } ${ internship.teacher.lastname }`\n            : currentUser.role === 'ROLE_ADMINISTRATIVE' &&\n            <Button type='primary' onClick={ () => setShowAssignTeacherModal( true ) }>Asignar tutor</Button>\n          }\n        </Descriptions.Item>\n        <Descriptions.Item label='Tipo'>{ internship.type }</Descriptions.Item>\n        <Descriptions.Item label='Fecha de inicio'>\n          { moment( internship.start_date ).format( 'DD/MM/YYYY' ) }\n        </Descriptions.Item>\n        <Descriptions.Item label='Fecha de fin'>\n          { internship.finish_date && moment( internship.finish_date ).format( 'DD/MM/YYYY' ) }\n        </Descriptions.Item>\n\n        <Descriptions.Item label='Convenio'>\n          <p>Código: { internship.institutional_agreement_code }</p>\n          <p>Nombre: { internship.institutional_agreement_name }</p>\n        </Descriptions.Item>\n\n        <Descriptions.Item label='Proyecto de investigación'>\n          <p>Código: { internship.research_project_code }</p>\n          <p>Nombre: { internship.research_project_name }</p>\n        </Descriptions.Item>\n\n        <Descriptions.Item label='Proyecto de vinculación'>\n          <p>Código: { internship.social_project_code }</p>\n          <p>Nombre: { internship.social_project_name }</p>\n        </Descriptions.Item>\n      </Descriptions>\n\n      <Descriptions title={ <Divider orientation='center'><strong>DATOS DEL PRACTICANTE</strong></Divider> }\n                    bordered\n                    column={ 2 }>\n        <Descriptions.Item label='Nombre'>\n          { internship.student.name } { internship.student.lastname }\n        </Descriptions.Item>\n        <Descriptions.Item label='Carrera'>{ internship.student.career }</Descriptions.Item>\n        <Descriptions.Item label='Créditos aprobados'>{ 0 }</Descriptions.Item>\n        <Descriptions.Item label='Correo'>{ internship.student.email }</Descriptions.Item>\n        <Descriptions.Item label='Teléfono'>{ internship.student.phone }</Descriptions.Item>\n      </Descriptions>\n\n      <Descriptions title={ <Divider orientation='center'><strong>DATOS DE LA INSTITUCIÓN RECEPTORA</strong></Divider> }\n                    bordered\n                    column={ 2 }>\n        <Descriptions.Item label='RUC'>{ internship.company.ruc }</Descriptions.Item>\n        <Descriptions.Item label='Razón social'>{ internship.company.name }</Descriptions.Item>\n        <Descriptions.Item label='Dirección'>{ internship.company.address }</Descriptions.Item>\n        <Descriptions.Item label='Ciudad'>{ internship.company.city }</Descriptions.Item>\n        <Descriptions.Item label='Correo'>{ internship.company.email }</Descriptions.Item>\n        <Descriptions.Item label='Teléfono 1'>{ internship.company.phone }</Descriptions.Item>\n        <Descriptions.Item label='Teléfono 2'>{ internship.company.mobile }</Descriptions.Item>\n        <Descriptions.Item label='Tipo'>{ internship.company.type }</Descriptions.Item>\n      </Descriptions>\n\n      <Descriptions title={ <Divider orientation='center'><strong>DATOS DEL RESPONSABLE DE LA INSTITUCIÓN\n        RECEPTORA</strong></Divider> }\n                    bordered\n                    column={ 2 }>\n        <Descriptions.Item label='Nombre'>\n          { internship.representative.name } { internship.representative.lastname }\n        </Descriptions.Item>\n        <Descriptions.Item label='Cargo'>{ internship.representative.job_title }</Descriptions.Item>\n        <Descriptions.Item label='Correo'>{ internship.representative.email }</Descriptions.Item>\n        <Descriptions.Item label='Teléfono 1'>{ internship.representative.phone }</Descriptions.Item>\n        <Descriptions.Item label='Teléfono 2'>{ internship.representative.mobile }</Descriptions.Item>\n      </Descriptions>\n\n      <Modal\n        title='Asignar tutor de prácticas'\n        visible={ showAssignTeacherModal }\n        closable={ false }\n        maskClosable={ false }\n        confirmLoading={ isSubmitting }\n        // okText='Enviar solicitud'\n        // cancelText={ 'Cancelar' }\n        onCancel={ () => setShowAssignTeacherModal( false ) }\n        onOk={ () => assignTeacherForm.submit() }\n        // footer={ null }\n        // width={ 800 }\n        destroyOnClose={ true }>\n        <AssignTeacherForm form={ assignTeacherForm }\n                           onSubmit={ handleAssignTeacher }\n                           teacherId={ internship.teacher_id } />\n      </Modal>\n\n    </>\n  );\n};\n\nexport default InternshipDetail;\n","/**\n * Created by chalosalvador on 9/10/20\n */\nimport React from 'react';\nimport { List, Divider, Typography, Descriptions, Rate, Button } from 'antd';\nimport {\n  FrownFilled, SmileFilled, MehFilled, CheckCircleTwoTone, CloseCircleTwoTone, EditOutlined\n} from '@ant-design/icons';\nimport { useAuth } from '../providers/Auth';\nimport ReportStudentSectionFormModal from './ReportStudentSectionFormModal';\nimport { useInternshipReport } from '../data/useInternshipReport';\nimport ShowError from './ShowError';\n\nconst { Title } = Typography;\n\nconst InternshipReportDetail = ( props ) => {\n  const { report, isLoading, isError } = useInternshipReport( props.report.internship_id, props.report.id );\n  const { currentUser } = useAuth();\n\n  const customIcons = {\n    1: {\n      text: 'Deficiente',\n      icon: <FrownFilled />\n    },\n    2: {\n      text: 'Malo',\n      icon: <FrownFilled />\n    },\n    3: {\n      text: 'Regular',\n      icon: <MehFilled />\n    },\n    4: {\n      text: 'Muy Bueno',\n      icon: <SmileFilled />\n    },\n    5: {\n      text: 'Excelente',\n      icon: <SmileFilled />\n    }\n  };\n\n  const renderRate = ( value ) =>\n    <>\n      <Rate disabled\n            defaultValue={ value }\n            character={ ( { index } ) => {\n              return customIcons[ index + 1 ].icon;\n            } } />\n      { value\n        ? <span className='ant-rate-text'>{ customIcons[ value ].text }</span>\n        : '' }\n    </>;\n\n  const renderUsefulTopics = ( topicsBySubject ) => {\n    let items = [];\n    for( const subject_id in topicsBySubject ) {\n      items.push(\n        <div key={ subject_id }>\n          <div><strong>{ topicsBySubject[ subject_id ][ 0 ].subject_name.toUpperCase() }</strong></div>\n          <ul>\n            {\n              topicsBySubject[ subject_id ].map( ( topic, i ) => <li key={ i }>{ topic.name }</li> )\n            }\n          </ul>\n        </div>\n      );\n    }\n\n    return items;\n  };\n\n  if( isLoading ) {\n    return <div>Cargando...</div>;\n  }\n\n  if( isError ) {\n    return <ShowError error={ isError } />;\n  }\n\n  return (\n    report &&\n    <>\n      <Title>\n        { `Reporte ${ report.type === 'partial'\n          ? 'parcial'\n          : 'final' }` }\n      </Title>\n\n      <Descriptions title={ <Divider orientation='center'><strong>REPORTE DEL ESTUDIANTE</strong></Divider> }\n                    bordered\n                    column={ 2 }\n                    extra={ currentUser.role === 'ROLE_STUDENT' && currentUser.id === report.user_id && report.status === 'representative_pending' &&\n                    <ReportStudentSectionFormModal edit={ true } report={ report } /> }>\n        <Descriptions.Item label='Desde'>{ report.from_date }</Descriptions.Item>\n        <Descriptions.Item label='Hasta'>{ report.to_date }</Descriptions.Item>\n        <Descriptions.Item label='Horas ejecutadas hasta la fecha'>{ report.hours_worked }</Descriptions.Item>\n        <Descriptions.Item label='Área asignada'>{ report.area }</Descriptions.Item>\n        <Descriptions.Item label='Actividades principales desarrolladas' span={ 2 }>\n          <ol>\n            { report.activities.map( ( activity, i ) => <li key={ i }>{ activity.description }</li> ) }\n          </ol>\n        </Descriptions.Item>\n        <Descriptions.Item label='Observaciones del estudiante'\n                           span={ 2 }>{ report.student_observations }</Descriptions.Item>\n\n        {\n          report.type === 'final' && report.useful_topics &&\n          <Descriptions.Item label='Asignaturas de la malla curricular y temáticas de mayor utilidad para el desarrollo de la práctica:'\n                             span={ 2 }>{ renderUsefulTopics( report.useful_topics ) }</Descriptions.Item>\n        }\n\n        {\n          report.type === 'final' && report.recommended_topics &&\n          <Descriptions.Item label='Temáticas que hicieron falta y que no constan en la malla curricular'\n                             span={ 2 }>{\n            <ul>{\n              report.recommended_topics.map( ( topic, i ) => <li key={ i }>{ topic.name }</li> )\n            }</ul>\n\n          }</Descriptions.Item>\n        }\n      </Descriptions>\n\n\n      <Descriptions title={ <Divider orientation='center'><strong>REPORTE DE LA EMPRESA</strong></Divider> }\n                    bordered\n                    column={ 2 }>\n        <Descriptions.Item label='Desempeño'\n                           span={ 2 }>{ renderRate( report.evaluation_performance ) }</Descriptions.Item>\n        <Descriptions.Item label='Motivación'\n                           span={ 2 }>{ renderRate( report.evaluation_motivation ) }</Descriptions.Item>\n        <Descriptions.Item label='Habilidades y destrezas'\n                           span={ 2 }>{ renderRate( report.evaluation_knowledge ) }</Descriptions.Item>\n        <Descriptions.Item label='Puntualidad y responsabilidad'\n                           span={ 2 }>{ renderRate( report.evaluation_punctuality ) }</Descriptions.Item>\n        <Descriptions.Item label='Observaciones' span={ 2 }>{ report.evaluation_observations }</Descriptions.Item>\n      </Descriptions>\n\n\n      <Descriptions title={ <Divider orientation='center'><strong>REPORTE DEL TUTOR ACADÉMICO</strong></Divider> }\n                    bordered\n                    column={ 2 }>\n        <Descriptions.Item label='Novedades reportadas por el estudiante/empresa'\n                           span={ 2 }>{ report.tutor_observations }</Descriptions.Item>\n        {\n          report.type === 'final'\n            ? <>\n              <Descriptions.Item label='Desempeño'>{ report.tutor_recommends !== null\n                ? report.tutor_recommends\n                  ? <CheckCircleTwoTone twoToneColor='#52c41a' />\n                  : <CloseCircleTwoTone twoToneColor='#eb2f96' />\n                : null }</Descriptions.Item>\n              <Descriptions.Item label='Observaciones'>{ report.tutor_recommends_observations }</Descriptions.Item>\n              <Descriptions.Item label='Motivación'>{ report.tutor_knowledge_contribution !== null\n                ? report.tutor_knowledge_contribution\n                  ? <CheckCircleTwoTone twoToneColor='#52c41a' />\n                  : <CloseCircleTwoTone twoToneColor='#eb2f96' />\n                : null }</Descriptions.Item>\n              <Descriptions.Item label='Observaciones'>{ report.tutor_knowledge_contribution_observations }</Descriptions.Item>\n              <Descriptions.Item label='Habilidades y destrezas'>{ report.tutor_recommends_approval !== null\n                ? report.tutor_recommends_approval\n                  ? <CheckCircleTwoTone twoToneColor='#52c41a' />\n                  : <CloseCircleTwoTone twoToneColor='#eb2f96' />\n                : null }</Descriptions.Item>\n              <Descriptions.Item label='Observaciones'>{ report.tutor_recommends_approval_observations }</Descriptions.Item>\n            </>\n            : <>\n              <Descriptions.Item label='Actividades de seguimiento ejecutadas'\n                                 span={ 2 }>{ report.tutor_followup_actions }</Descriptions.Item>\n              <Descriptions.Item label='Acciones de mejora'\n                                 span={ 2 }>{ report.tutor_improvement_actions }</Descriptions.Item>\n            </>\n        }\n      </Descriptions>\n\n\n    </>\n  );\n};\n\nexport default InternshipReportDetail;\n","/**\n * Created by chalosalvador on 8/18/20\n */\nimport useSWR from 'swr';\nimport API from './index';\n\nexport const useInternshipReport = ( internshipId, reportId, options= {} ) => {\n  const { data, error } = useSWR( `/internships/${ internshipId }/internship-reports/${reportId}`, API.fetcher, options );\n\n  return {\n    report: data && data.data,\n    isLoading: !error && !data,\n    isError: error\n  };\n};\n","/**\n * Created by chalosalvador on 9/9/20\n */\nimport React, { useState } from 'react';\nimport { useInternshipReportsList } from '../data/useInternshipReportsList';\nimport ShowError from './ShowError';\nimport { Drawer, Table, Button } from 'antd';\nimport moment from 'moment';\nimport InternshipReportDetail from './InternshipReportDetail';\n\nconst InternshipReportsList = ( { internshipId } ) => {\n  const { reports, isLoading, isError } = useInternshipReportsList( internshipId );\n  const [ report, setReport ] = useState( null );\n\n  const columns = [\n    {\n      title: 'Fecha de creación',\n      dataIndex: 'created_at',\n      key: 'created_at',\n    },\n    {\n      title: 'Fecha de inicio',\n      dataIndex: 'from_date',\n      key: 'from_date',\n    },\n    {\n      title: 'Fecha de fin',\n      dataIndex: 'to_date',\n      key: 'to_date',\n    },\n    {\n      title: 'Horas trabajadas',\n      dataIndex: 'hours_worked',\n      key: 'hours_worked',\n    },\n    {\n      title: 'Tipo',\n      dataIndex: 'type',\n      key: 'type',\n    },\n    {\n      title: 'Estado',\n      dataIndex: 'status',\n      key: 'status',\n    },\n    {\n      title: 'Acciones',\n      dataIndex: 'actions',\n      key: 'actions',\n      render: ( value, internshipReport ) => {\n        return <Button type='link' onClick={ () => handleViewReportDetail( internshipReport ) }>Ver detalles</Button>;\n      }\n    },\n  ];\n\n  const handleViewReportDetail = ( internshipReport ) => {\n    console.log( 'internshipReport', internshipReport );\n    setReport( internshipReport );\n  };\n\n  if( isLoading ) {\n    return <div>Cargando...</div>;\n  }\n\n  if( isError ) {\n    return <ShowError error={ isError } />;\n  }\n\n  const getDataSource = () => {\n    if( reports ) {\n      return reports.map( ( report ) => ({\n          ...report,\n          key: report.id,\n          created_at: moment( report.created_at ).format( 'DD/MM/YYYY HH:mm:ss' ),\n          from_date: moment( report.from_date ).format( 'DD/MM/YYYY' ),\n          to_date: report.to_date && moment( report.to_date ).format( 'DD/MM/YYYY' ),\n          hours_worked: report.hours_worked,\n          status: report.status,\n          type: report.type,\n        })\n      );\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <>\n      <Table\n        dataSource={ getDataSource() }\n        columns={ columns }\n        // rowKey={ record => record.id }\n        loading={ isLoading }\n        summary={ ( reports ) => {\n          let totalHoursApproved = 0;\n          let totalHoursPending = 0;\n          reports.forEach( ( { hours_worked, status } ) => {\n            if( status === 'approved' || status === 'registered' ) {\n              totalHoursApproved += hours_worked;\n            } else {\n              totalHoursPending += hours_worked;\n            }\n          } );\n          return (\n            <>\n              <Table.Summary.Row>\n                <Table.Summary.Cell colSpan={ 3 }>Total de horas aprobadas</Table.Summary.Cell>\n                <Table.Summary.Cell index={ 3 }>{ totalHoursApproved }</Table.Summary.Cell>\n              </Table.Summary.Row>\n              <Table.Summary.Row>\n                <Table.Summary.Cell colSpan={ 3 }>Total de horas pendientes</Table.Summary.Cell>\n                <Table.Summary.Cell index={ 3 }>{ totalHoursPending }</Table.Summary.Cell>\n              </Table.Summary.Row>\n            </>\n          );\n        } }\n        pagination={ false }\n        // onChange={ ( pagination ) => setPageIndex( pagination.current ) }\n      />\n\n      <Drawer\n        closable={ false }\n        onClose={ () => setReport( null ) }\n        visible={ !!report }\n        placement='right'\n        // height='80%'\n        width='1100px'\n        destroyOnClose\n      >\n        { report && <InternshipReportDetail report={ report } /> }\n      </Drawer>\n    </>\n  )\n    ;\n};\n\nexport default InternshipReportsList;\n","/**\n * Created by chalosalvador on 9/9/20\n */\nimport useSWR from 'swr';\nimport API from './index';\n\nexport const useInternshipReportsList = ( id ) => {\n  const { data, error, mutate } = useSWR( `/internships/${id}/internship-reports`, API.fetcher );\n\n  console.log( 'data', data );\n  return {\n    reports: data && data.data,\n    // links: data && data.links,\n    // meta: data && data.meta,\n    isLoading: !error && !data,\n    isError: error,\n    mutate\n  };\n};\n","import React from 'react';\nimport withAuth from '../hocs/withAuth';\nimport { useParams } from 'react-router-dom';\nimport InternshipDetail from '../components/InternshipDetail';\nimport InternshipReportsList from '../components/InternshipReportsList';\nimport { useAuth } from '../providers/Auth';\nimport ReportStudentSectionFormModal from '../components/ReportStudentSectionFormModal';\nimport { Alert, Divider } from 'antd';\nimport { useInternship } from '../data/useInternship';\nimport ShowError from '../components/ShowError';\n\nconst InternshipPage = () => {\n  const { id } = useParams();\n  const { currentUser } = useAuth();\n  const { internship, isLoading, isError } = useInternship( id );\n\n  if( isLoading ) {\n    return <div>Cargando...</div>;\n  }\n\n  if( isError ) {\n    return <ShowError error={ isError } />;\n  }\n  return (\n    <>\n      <InternshipDetail internship={ internship } />\n\n      <Divider orientation='center'\n               style={ {\n                 marginTop: 40,\n                 marginBottom: 40\n               } }><strong>REPORTES REGISTRADOS</strong></Divider>\n\n      {\n        currentUser.role === 'ROLE_STUDENT'\n          ?\n          internship.status === 'in_progress'\n            ? <ReportStudentSectionFormModal internshipId={ id } />\n            : internship.status === 'pending'\n            ? <Alert message='Pendiente de autorización'\n                     description='Estas prácticas deben ser autorizadas antes de que puedas registrar reportes.'\n                     type='warning'\n                     showIcon />\n            : internship.status === 'final_report_sent'\n              ? <Alert message='Reporte final enviado'\n                       description='Ya has enviado el reporte final para estas prácticas, no es posible registrar más reportes.'\n                       type='info'\n                       showIcon />\n              : null\n          : null\n      }\n\n      <InternshipReportsList internshipId={ id } />\n    </>\n  );\n\n};\n\nexport default withAuth( InternshipPage );\n","/**\n * Created by chalosalvador on 17/01/19.\n */\n\nexport const translateMessage = ( type, params = {} ) => {\n\n  const messageList = {\n    'invalid_credentials': 'Usuario o clave incorrectos',\n    'The given data was invalid.': 'Datos no válidos',\n    'token_expired': 'Tu sesión ha expirado',\n    'PERMISSION_DENIED': 'No tienes permiso para realizar esta acción',\n    'auth/internal-error': 'hmmm... Algo salió mal y no lo teníamos previsto, por favor vuelve a intentarlo.',\n    'auth/argument-error': 'La URL de activación no es válida.',\n    'auth/invalid-user-token': '',\n    'auth/invalid-api-key': '',\n    'auth/network-request-failed': 'Parece que no estás conectado a Internet, por favor asegúrate de estar conectado e inténtalo de nuevo.',\n    'auth/operation-not-allowed': '',\n    'auth/requires-recent-login': 'Por favor vuelve a iniciar sesión para completar esta acción.',\n    'auth/user-token-expired': '',\n    'auth/web-storage-unsupported': '',\n    'auth/email-sent': `Se ha enviado el correo de verificación a ${params.email}. Por favor revisa tu bandeja de entrada.`,\n    'auth/reset-password-email-sent': `Se ha enviado un correo para restablecer la contraseña a ${params.email}. Por favor revisa tu bandeja de entrada.`,\n    'auth/reset-password-success': 'Tu contraseña ha sido cambiada con éxito, enseguida serás redirigido para que inicies sesión..',\n    'auth/change-password-success': 'Tu contraseña ha sido cambiada con éxito.',\n    'auth/account-verified': 'Felicidades, has activado tu cuenta, por favor inicia sesión.',\n    'auth/invalid-action-code': 'El código de activación ha caducado o ya ha sido utilizado.',\n    'auth/expired-action-code': 'El código de activación ha caducado.',\n    'auth/user-disabled': 'Este usuario se encuentra deshabilitado.',\n    'auth/user-not-found': 'No existe un usuario registrado con el email proporcionado.',\n    'auth/wrong-password': 'Usuario o contraseña incorrectos.',\n    'auth/weak-password': 'La contraseña se considera muy débil, por favor ingresa una contraseña más fuerte.',\n    'auth/popup-closed-by-user': 'La ventana de inicio de sesión fue cerrada por el usuario.',\n    'auth/account-exists-with-different-credential': 'Este correo electrónico se encuentra registrado pero con otras credenciales, por favor intenta iniciar sesión con otro método.',\n    'auth/account-exists-with-different-role': `Este correo electrónico se encuentra registrado pero con el perfil de \"${params.role}\", se ha iniciado sesión con este perfil, pronto podrás registrarte con ambos perfiles en Profe a Tiempo.`,\n    'auth/email-already-in-use': 'Este correo electrónico ya está en uso.',\n    'auth/requires-login': 'Por favor inicia sesión para completar esta acción.',\n    'auth/invalid-email': 'Correo electrónico no válido.',\n    'auth/too-many-requests': 'Ups... esas son muchas peticiones en muy poco tiempo, espera unos segundos y vuelve a intentarlo.',\n    'profile/profile-saved-success': 'Los datos de tu perfil se han guardado con éxito.',\n    'profile/save-teacher-data-error': 'Ocurrió un error al guardar la información del perfil del profesor.',\n    'profile/save-student-data-error': 'Ocurrió un error al guardar la información del perfil del estudiante.',\n    'profile/not-completed-profile': 'Debes completar tu perfil para realizar esta acción.',\n    'profile/not-active-teacher': 'Aún no eres un profe activo, asegúrate de haber completado el proceso de entrevista y aceptar el acuerdo de responsabilidad para ser activado.',\n    'profile/not-accepted-teacher': 'Aún no eres un profe aceptado, asegúrate de haber aprobado la etapa de entrevistas.',\n    'profile/subscription-created-success': 'Gracias! se ha registrado tu infomación de pago, ahora puedes empezar a solicitar clases.',\n    'profile/subscription-updated-success': 'Gracias! se ha actualizado tu infomación de pago, puedes continuar solicitando clases.',\n    'profile/subscription-error': 'Ocurrió un error al registrar tu tarjeta, por favor asegúrate que los datos son correctos e inténtalo de nuevo.',\n    'class-request/save-class-request-data-success': 'Se ha enviado tu solicitud de clase, te notificaremos tan pronto como te asignemos un profe.',\n    'class-request/save-class-request-data-error': 'Ocurrió un error al guardar la información de la solicitud.',\n    'class-request/complete-profile-first': 'Debes completar tu perfil para empezar a solicitar clases.',\n    'class-request/must-be-student-to-request-class': 'Debes estar registrado como estudiante para solicitar clases.',\n    'class-request/request-expired': 'La solicitud a expirado.',\n    'class-request/request-not-available': 'Otro profesor ya ha aceptado esta clase, puedes buscar más clases en la lista.',\n    'class-request/teacher-assignation-success': 'Se te ha asignado esta clase, por favor ponte en contacto con el estudiante.',\n    'class-request/teacher-assignation-error': 'Ocurrió un error al asignarte esta clase, por favor inténtalo de nuevo o busca otra clase.',\n    'class-request/teacher-data-details': 'No tienes un profe asiganado todavía',\n    'class-evaluation/cannot-evaluate-class-yet': 'Aún no puedes calificar esta clase.',\n    'class-evaluation/class-already-evaluated': 'Ya has calificado esta clase.',\n    'class-evaluation/save-teacher-evaluation-success': 'Gracias por calificar a tu profesor.',\n    'class-evaluation/save-teacher-evaluation-error': 'No se pudo guardar la calificación del profesor, por favor inténtalo nuevamente.',\n    'class-evaluation/save-student-evaluation-success': 'Gracias por calificar a tu estudiante.',\n    'class-evaluation/save-student-evaluation-error': 'No se pudo guardar la calificación del estudiante, por favor inténtalo nuevamente.',\n    'search-request/complete-process-first': 'Debes completar el proceso de selección para poder aceptar una clase.',\n    'teacher-evaluation/argument-error': 'La función debe ser llamada con un argumento \"teacherId\".'\n  };\n\n  return messageList[ type ] || type;\n};\n","import { List } from 'antd';\nimport React from 'react';\n\nconst ErrorList = ( { errors } ) => <List size='small'\n                                          dataSource={ Object.values( errors )\n                                            .map( ( errorMessage ) => errorMessage ) }\n                                          renderItem={ item => <List.Item>{ item }</List.Item> }\n/>;\n\nexport default ErrorList;\n","import React from 'react';\nimport { Button, Result } from 'antd';\nimport { translateMessage } from '../utils/translateMessage';\nimport Routes from '../constants/routes';\n\nconst setStatus = ( status ) => {\n  switch( status ) {\n    case 403:\n    case 401:\n      return 403;\n    case 500:\n      return 500;\n    case 404:\n      return 404;\n    default:\n      return 'error';\n  }\n};\n\nconst ShowError = ( { error } ) => {\n  console.log( 'props', error.error );\n  return (\n    <Result status={ setStatus( error.status ) }\n            title={ translateMessage( error.error ) }\n            subTitle={translateMessage(error.message)}\n            extra={ <Button type='primary'>Back Home</Button> } />\n  );\n};\n\nexport default ShowError;\n","/**\n * Created by chalosalvador on 9/11/20\n */\nimport React, { useState } from 'react';\nimport { Alert, Form, Button, Input, DatePicker, InputNumber } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { useAuth } from '../providers/Auth';\n\nconst { RangePicker } = DatePicker;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 18 },\n    sm: { span: 6 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 20 },\n  },\n};\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 18,\n      offset: 6\n    },\n  },\n};\n\nconst ReportStudentSectionForm = ( { form, onSubmit, ...props } ) => {\n  const { currentUser } = useAuth();\n  const [ isFinalReport, setIsFinalReport ] = useState( false );\n\n  const disabledDate = ( current ) => current && current > moment().endOf( 'day' );\n  const handleChangeHoursWorked = ( hours ) => {\n    const total_hours = currentUser.hours_registered + currentUser.hours_approved;\n    const sum_hours = total_hours + hours;\n    setIsFinalReport( sum_hours >= 480 );\n    form.setFieldsValue( {\n      type: sum_hours > 480\n        ? 'final'\n        : 'partial'\n    } );\n  };\n\n  return (\n    <Form\n      { ...formItemLayout }\n      onFinish={ onSubmit }\n      form={ form }\n      name='report'\n      initialValues={ !props.report\n        ? {\n          activities: [ '' ],\n          type: 'partial'\n        }\n        : {\n          ...props.report,\n          dates: [ moment( props.report.from_date ), moment( props.report.to_date ) ],\n          activities: props.report.activities.length > 0\n            ? props.report.activities.map( ( activity ) => activity.description )\n            : [ '' ]\n        } }\n    >\n      <Form.Item name='dates' label='Fechas' rules={ [\n        {\n          required: true,\n          message: 'Ingresa las fechas incluidas en este reporte'\n        },\n\n      ] }>\n        <RangePicker placeholder={ [ 'Inicio', 'Fin' ] }\n                     inputReadOnly\n                     disabledDate={ disabledDate }\n                     format='DD/MM/YYYY' />\n      </Form.Item>\n\n      <Form.Item label='Área' name='area' rules={ [\n        {\n          required: true,\n          whitespace: true,\n          message: 'Selecciona el área de la empresa donde desarrollaste tus actividades.'\n        }\n      ] }>\n        <Input />\n      </Form.Item>\n\n      <Form.Item label='Horas' name='hours_worked'\n                 rules={ [\n                   {\n                     required: true,\n                     message: 'Ingresa la cantidad de horas que vas a reportar.'\n                   },\n                   {\n                     type: 'number',\n                     min: 1,\n                     message: 'Ingresa un valor numérico.'\n                   },\n                 ] }\n                 extra={\n                   isFinalReport && <Alert message='Reporte final de prácticas'\n                                           description='Tus horas de prácticas llegan o superan las 480 horas requeridas por lo que este será tu reporte final.'\n                                           type='info' showIcon />\n                 }>\n        <InputNumber style={ { width: '100%' } } onChange={ handleChangeHoursWorked } />\n      </Form.Item>\n\n      <Form.Item name='type' hidden\n                 rules={ [\n                   {\n                     required: true,\n                     message: 'El tipo de reporte no es válido.'\n                   },\n                   {\n                     enum: [ 'partial', 'final' ],\n                     message: 'El tipo de reporte no es válido.'\n                   },\n                 ] }\n                 >\n        <InputNumber style={ { width: '100%' } } onChange={ handleChangeHoursWorked } />\n      </Form.Item>\n\n      <Form.List name='activities'>\n        { ( fields, { add, remove } ) => {\n          return (\n            <div>\n              { fields.map( ( field, index ) => (\n                <Form.Item\n                  { ...(index === 0\n                    ? formItemLayout\n                    : formItemLayoutWithOutLabel) }\n                  label={ index === 0\n                    ? 'Actividades:'\n                    : '' }\n                  required={ true }\n                  key={ field.key }\n                >\n                  <Form.Item\n                    { ...field }\n                    // validateTrigger={ [ 'onChange', 'onBlur' ] }\n                    rules={ [\n                      {\n                        required: true,\n                        whitespace: true,\n                        message: 'Detalla las actividades desarrolladas durante las prácticas.',\n                      },\n                    ] }\n                    noStyle\n                  >\n                    <Input.TextArea placeholder='Descripción de la actividad'\n                                    autoSize={ { maxRows: 4 } }\n                                    style={ { width: '90%' } } />\n                  </Form.Item>\n                  { fields.length > 1\n                    ? (\n                      <MinusCircleOutlined\n                        className='dynamic-delete-button'\n                        style={ { margin: '0 8px' } }\n                        onClick={ () => {\n                          remove( field.name );\n                        } }\n                      />\n                    )\n                    : null }\n                </Form.Item>\n              ) ) }\n              <Form.Item { ...formItemLayoutWithOutLabel }>\n                <Button\n                  type='dashed'\n                  onClick={ () => {\n                    add();\n                  } }\n                  style={ { width: '90%' } }\n                >\n                  <PlusOutlined /> Añadir una actividad\n                </Button>\n              </Form.Item>\n            </div>\n          );\n        } }\n      </Form.List>\n\n      <Form.Item name='student_observations' label='Observaciones:' rules={ [\n        {\n          required: true,\n          whitespace: true,\n          message: 'Detalla las actividades desarrolladas durante las prácticas.',\n        },\n      ] }>\n        <Input.TextArea placeholder='Observaciones sobre las prácticas que ha realizado en la empresa.'\n                        autoSize={ { maxRows: 4 } } />\n      </Form.Item>\n\n      {\n        isFinalReport && <h1>Final</h1>\n      }\n\n    </Form>\n  );\n};\n\nexport default ReportStudentSectionForm;\n","/**\n * Created by chalosalvador on 9/11/20\n */\nimport React, { useState } from 'react';\nimport { Row, Col, Button, Modal, Form, message } from 'antd';\nimport { EditOutlined, PlusOutlined } from '@ant-design/icons';\nimport ReportStudentSectionForm from './ReportStudentSectionForm';\nimport API from '../data';\nimport ErrorList from './ErrorList';\nimport { translateMessage } from '../utils/translateMessage';\nimport { mutate } from 'swr';\nimport moment from 'moment';\n\nconst ReportStudentSectionFormModal = ( { internshipId, report, edit } ) => {\n  const [ form ] = Form.useForm();\n  const [ showModal, setShowModal ] = useState( false );\n  const [ isSubmitting, setIsSubmitting ] = useState( false );\n\n  const handleCreate = async( values ) => {\n    console.log( 'values', values );\n    try {\n      setIsSubmitting( true );\n      await API.post( `/internships/${ internshipId }/internship-reports`, {\n        ...values,\n        from_date: moment( values.dates[ 0 ] ).format( 'YYYY-MM-DD' ),\n        to_date: moment( values.dates[ 1 ] ).format( 'YYYY-MM-DD' ),\n      } );\n\n      await mutate( `/internships/${ internshipId }/internship-reports` );\n      setShowModal( false );\n      form.resetFields();\n      message.success( 'El reporte se ha guardado correctamente.' );\n    } catch( e ) {\n      const errorList = e.error && <ErrorList errors={ e.error } />;\n      message.error( <>{ translateMessage( e.message ) }{ errorList }</> );\n    }\n    setIsSubmitting( false );\n  };\n\n  const handleEdit = async( values ) => {\n    console.log( 'values', values );\n    try {\n      setIsSubmitting( true );\n      await API.put( `/internships/${ report.internship_id }/internship-reports/${ report.id }`, {\n        ...values,\n        from_date: moment( values.dates[ 0 ] ).format( 'YYYY-MM-DD' ),\n        to_date: moment( values.dates[ 1 ] ).format( 'YYYY-MM-DD' ),\n      } );\n\n      await mutate( `/internships/${ report.internship_id }/internship-reports` );\n      await mutate( `/internships/${ report.internship_id }/internship-reports/${ report.id }` );\n      setShowModal( false );\n      form.resetFields();\n      message.success( 'El reporte se ha guardado correctamente.' );\n    } catch( e ) {\n      const errorList = e.error && <ErrorList errors={ e.error } />;\n      message.error( <>{ translateMessage( e.message ) }{ errorList }</> );\n    }\n    setIsSubmitting( false );\n  };\n\n  return (\n    <>\n      {\n        <Row>\n          <Col align='right'>\n            {\n              !edit\n                ? <Button type='primary'\n                          style={ { marginBottom: 20 } }\n                          onClick={ () => setShowModal( true ) }\n                          icon={ <PlusOutlined /> }>Nuevo reporte</Button>\n                : <Button onClick={ () => setShowModal( true ) }\n                          icon={ <EditOutlined /> }>Editar</Button>\n            }\n          </Col>\n        </Row>\n      }\n\n      <Modal\n        title={ `${ !edit\n          ? 'Nuevo'\n          : 'Editar' } reporte de prácticas` }\n        visible={ showModal }\n        closable={ false }\n        maskClosable={ false }\n        okText='Enviar reporte'\n        confirmLoading={ isSubmitting }\n        cancelText={ 'Cancelar' }\n        onCancel={ () => {\n          form.resetFields();\n          setShowModal( false );\n        } }\n        onOk={ () => form.submit() }>\n        {\n          !edit\n            ? <ReportStudentSectionForm form={ form } onSubmit={ handleCreate } internshipId={ internshipId } />\n            : <ReportStudentSectionForm form={ form } onSubmit={ handleEdit } report={ report } />\n        }\n      </Modal>\n    </>\n  );\n};\n\nexport default ReportStudentSectionFormModal;\n"],"sourceRoot":""}