{"version":3,"sources":["components/InternshipsList.js","data/useInternshipsList.js","components/HomeAdministrative.js","components/HomeTeacher.js","components/CompanyForm.js","components/InternshipForm.js","components/RepresentativeForm.js","components/RepresentativeStep.js","components/CompanyStep.js","components/InternshipFormSteps.js","components/InternshipFormModal.js","components/HomeStudent.js","components/HomeRepresentative.js","pages/HomePage.js","utils/translateMessage.js","components/ErrorList.js","components/ShowError.js","components/ReportStudentSectionForm.js","components/ReportStudentSectionFormModal.js"],"names":["InternshipsList","useState","pageIndex","setPageIndex","useSWR","API","fetcher","data","error","mutate","console","log","internships","links","meta","isLoading","isError","useInternshipsList","columns","useAuth","currentUser","title","dataIndex","key","render","value","internship","to","Routes","INTERNSHIP_ID","replace","pagination","current","pageSize","total","showSizeChanger","ShowError","current_page","per_page","dataSource","map","id","created_at","moment","format","start_date","finish_date","type","student","name","lastname","tutor","teacher","company","status","rowKey","record","loading","onChange","locale","emptyText","image","Empty","PRESENTED_IMAGE_SIMPLE","description","Title","Typography","HomeAdministrative","HomeTeacher","Option","Select","formItemLayout","labelCol","xs","span","sm","wrapperCol","CompanyForm","form","onSubmit","onFinish","initialValues","Item","label","placeholder","rules","required","whitespace","message","pattern","RegExp","wideFields","specificFields","InternshipForm","currentSpecifics","setCurrentSpecifics","showInstitutionalAgreementFields","setShowInstitutionalAgreementFields","showResearchProjectFields","setShowResearchProjectFields","showSocialProjectFields","setShowSocialProjectFields","setFieldsValue","specific_field","indexOf","wide","specific","inputReadOnly","disabledDate","endOf","TextArea","autoSize","maxRows","checked","RepresentativeForm","representative","confirm","Modal","RepresentativeStep","representatives","viewNewForm","setViewNewForm","toggleForm","icon","ExclamationCircleOutlined","content","okText","cancelText","onOk","a","resetFields","prevState","onCancel","justify","style","marginBottom","onClick","level","CompanyStep","setCompany","isLoadingCompany","setIsLoadingCompany","foundCompany","setFoundCompany","handleCheckCompany","validateFields","get","getFieldValue","companyFound","noStyle","disabled","width","showIcon","hidden","address","city","email","phone","mobile","Step","Steps","InternshipFormSteps","props","Form","useForm","companyForm","representativeForm","internshipForm","setCurrent","setIsSubmitting","finished","setFinished","steps","next","values","handleCreate","messageKey","companyData","getFieldsValue","representativeData","internshipData","companyId","post","representativeId","representative_id","success","errorList","ErrorList","errors","translateMessage","subTitle","extra","step","i","align","length","InternshipFormModal","edit","showModal","setShowModal","EditOutlined","PlusOutlined","visible","maskClosable","footer","destroyOnClose","withAuth","textAlign","hours_registered","prefix","CheckCircleTwoTone","twoToneColor","hours_approved","hours_pending","ClockCircleTwoTone","hours_rejected","CloseCircleTwoTone","HomeRepresentative","role","params","messageList","size","Object","errorMessage","renderItem","item","setStatus","RangePicker","DatePicker","formItemLayoutWithOutLabel","offset","ReportStudentSectionForm","isFinalReport","setIsFinalReport","handleChangeHoursWorked","hours","sum_hours","report","dates","from_date","to_date","activities","activity","min","enum","List","fields","add","remove","field","index","MinusCircleOutlined","className","margin","ReportStudentSectionFormModal","internshipId","isSubmitting","handleEdit","put","internship_id","closable","confirmLoading","submit"],"mappings":"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","file":"static/js/11.24d57f55.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Table, Empty, Button } from 'antd';\nimport { useInternshipsList } from '../data/useInternshipsList';\nimport ShowError from './ShowError';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport Routes from '../constants/routes';\nimport { useAuth } from '../providers/Auth';\n\nconst InternshipsList = () => {\n  const [ pageIndex, setPageIndex ] = useState( 1 );\n  const { internships, meta, isLoading, isError } = useInternshipsList( pageIndex );\n  const { currentUser } = useAuth();\n\n  const columns = [\n    {\n      title: 'Fecha de creación',\n      dataIndex: 'created_at',\n      key: 'created_at',\n    },\n    {\n      title: 'Estudiante',\n      dataIndex: 'student',\n      key: 'student',\n    },\n    {\n      title: 'Empresa',\n      dataIndex: 'company',\n      key: 'company',\n    },\n    {\n      title: 'Tutor',\n      dataIndex: 'tutor',\n      key: 'tutor',\n    },\n    {\n      title: 'Fecha de inicio',\n      dataIndex: 'start_date',\n      key: 'start_date',\n    },\n    {\n      title: 'Fecha de fin',\n      dataIndex: 'finish_date',\n      key: 'finish_date',\n    },\n    {\n      title: 'Tipo',\n      dataIndex: 'type',\n      key: 'type',\n    },\n    {\n      title: 'Estado',\n      dataIndex: 'status',\n      key: 'status',\n    },\n    {\n      title: 'Acciones',\n      dataIndex: 'actions',\n      key: 'actions',\n      render: ( value, internship ) => {\n        return <Link to={ Routes.INTERNSHIP_ID.replace( ':id', internship.key ) }>Ver detalles</Link>;\n      }\n    },\n  ];\n\n  let pagination = {\n    current: 1,\n    pageSize: 10,\n    total: 10,\n    showSizeChanger: false\n  };\n\n\n  if( isError ) {\n    return <ShowError error={ isError } />;\n  }\n\n  const getDataSource = () => {\n    if( internships ) {\n      return internships.map( ( internship ) => ({\n          key: internship.id,\n          created_at: moment( internship.created_at ).format( 'DD/MM/YYYY HH:mm:ss' ),\n          start_date: moment( internship.start_date ).format( 'DD/MM/YYYY' ),\n          finish_date: internship.finish_date && moment( internship.finish_date ).format( 'DD/MM/YYYY' ),\n          type: internship.type,\n          student: `${ internship.student.name } ${ internship.student.lastname }`,\n          tutor: internship.teacher && `${ internship.teacher.name } ${ internship.teacher.lastname }`,\n          company: internship.company && internship.company.name,\n          status: internship.status,\n        })\n      );\n    } else {\n      return [];\n    }\n  };\n\n  if( meta ) {\n    pagination = {\n      current: meta.current_page,\n      pageSize: meta.per_page,\n      total: meta.total,\n      showSizeChanger: false\n    };\n  }\n\n  return <Table\n    dataSource={ getDataSource() }\n    columns={ columns }\n    rowKey={ record => record.key }\n    pagination={ pagination }\n    loading={ isLoading }\n    onChange={ ( pagination ) => setPageIndex( pagination.current ) }\n    locale={\n      {\n        emptyText: <Empty image={ Empty.PRESENTED_IMAGE_SIMPLE }\n                          description={ <span>No hay prácticas preprofesionales registradas</span> }\n        />\n      }\n    }\n  />;\n};\n\nexport default InternshipsList;\n","/**\n * Created by chalosalvador on 8/18/20\n */\nimport useSWR from 'swr';\nimport API from './index';\n\nexport const useInternshipsList = (pageIndex) => {\n  const { data, error, mutate } = useSWR( `/internships?page=${pageIndex}`, API.fetcher );\n\n  console.log( 'data', data );\n  return {\n    internships: data && data.data,\n    links: data && data.links,\n    meta: data && data.meta,\n    isLoading: !error && !data,\n    isError: error,\n    mutate\n  };\n};\n","/**\n * Created by chalosalvador on 9/11/20\n */\nimport React from 'react';\nimport InternshipsList from './InternshipsList';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\nconst HomeAdministrative = () => {\n  return (\n    <div>\n      <Title>Lista de prácticas preprofesionales</Title>\n      <InternshipsList />\n    </div>\n  );\n};\n\nexport default HomeAdministrative;\n","/**\n * Created by chalosalvador on 9/11/20\n */\nimport React from 'react';\nimport InternshipsList from './InternshipsList';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\nconst HomeTeacher = () => {\n  return (\n    <div>\n      <Title>Tutorias de prácticas preprofesionales</Title>\n      <InternshipsList />\n    </div>\n  );\n};\n\nexport default HomeTeacher;\n","/**\n * Created by chalosalvador on 9/13/20\n */\nimport React from 'react';\nimport { Form, Input, Select } from 'antd';\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 18 },\n    sm: { span: 6 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 20 },\n  },\n};\n\nconst CompanyForm = ( { form, onSubmit, company } ) => (\n  <Form\n    { ...formItemLayout }\n    name='company'\n    onFinish={ onSubmit }\n    form={ form }\n    initialValues={ company }\n  >\n    <Form.Item label='RUC' name='ruc'\n               placeholder='Ingresa el RUC de la empresa donde realizarás tus prácticas'\n               rules={ [\n                 {\n                   required: true,\n                   whitespace: true,\n                   message: 'Ingresa el ruc de la empresa.'\n                 }\n               ] }>\n      <Input />\n    </Form.Item>\n\n    <Form.Item name='name' label='Nombre' rules={ [\n      {\n        required: true,\n        whitespace: true,\n        message: 'Ingresa el nombre de la empresa.'\n      }\n    ] }>\n      <Input />\n    </Form.Item>\n\n    <Form.Item name='address' label='Dirección' rules={ [\n      {\n        required: true,\n        whitespace: true,\n        message: 'Ingresa la dirección de la empresa.'\n      }\n    ] }>\n      <Input />\n    </Form.Item>\n\n    <Form.Item name='city' label='Ciudad' rules={ [\n      {\n        required: true,\n        whitespace: true,\n        message: 'Ingresa la ciudad de la empresa.'\n      }\n    ] }>\n      <Input />\n    </Form.Item>\n\n    <Form.Item name='email' label='Correo' rules={ [\n      {\n        required: true,\n        whitespace: true,\n        message: 'Ingresa el correo de la empresa.'\n      },\n      {\n        type: 'email',\n        message: 'Ingresa un correo electrónico válido.'\n      }\n    ] }>\n      <Input />\n    </Form.Item>\n\n    <Form.Item name='phone' label='Teléfono 1' rules={ [\n      {\n        required: true,\n        whitespace: true,\n        message: 'Ingresa un número de contacto de la empresa.'\n      },\n      {\n        pattern: new RegExp( '^\\\\d{7,}$' ),\n        message: 'Ingresa un número de teléfono válido.'\n      }\n    ] }>\n      <Input />\n    </Form.Item>\n\n    <Form.Item name='mobile' label='Teléfono 2' rules={ [\n      {\n        pattern: new RegExp( '^\\\\d{7,}$' ),\n        message: 'Ingresa un número de teléfono válido.'\n      }\n    ] }>\n      <Input />\n    </Form.Item>\n\n    <Form.Item name='type' label='Tipo' rules={ [\n      {\n        required: true,\n        message: 'Selecciona el tipo de empresa.'\n      },\n    ] }>\n      <Select placeholder='Selecciona...'>\n        <Option value='pública'>Pública</Option>\n        <Option value='privada'>Privada</Option>\n        <Option value='organismo internacional'>Organismo internacional</Option>\n        <Option value='tercer sector'>Tercer sector</Option>\n        <Option value='otras'>Otras</Option>\n      </Select>\n    </Form.Item>\n  </Form>\n);\n\nexport default CompanyForm;\n","/**\n * Created by chalosalvador on 9/14/20\n */\nimport React, { useState } from 'react';\nimport { Form, Input, Select, Switch, DatePicker } from 'antd';\nimport moment from 'moment';\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 18 },\n    sm: { span: 6 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 20 },\n  },\n};\n\nconst wideFields = [\n  'Educación',\n  'Artes y humanidades',\n  'Ciencias sociales, periodismo, información y derecho',\n  'Administración',\n  'Ciencias naturales, matemáticas, y estadística',\n  'Tecnologías de la información y la comunicación (TIC)',\n  'Ingeniería, industría y construcción',\n  'Agricultura, solvicultura, pesca y veterinaria',\n  'Salud y bienestar',\n  'Servicios',\n];\n\nconst specificFields = [\n  [ 'Educación', ],\n  [ 'Artes', 'Humanidades', 'Idiomas', ],\n  [ 'Ciencias sociales y del comportamiento', 'Periodismo e información', 'Derecho', ],\n  [ 'Educación comercial y administración', ],\n  [ 'Ciencias biológicas y afines', 'Medio ambiente', 'Ciencias físicas', 'Matemáticas y estadística', ],\n  [ 'Tecnologías de la información y la comunicación (TIC)', ],\n  [ 'Ingeniería y profesiones afines', 'Industria y producción', 'Arquitectura y construcción', ],\n  [ 'Agricultura', 'Silvicultura', 'Pesca', 'Veterinaria', ],\n  [ 'Salud', 'Bienestar', ],\n  [ 'Servicios personales', 'Servicios de protección', 'Servicios de seguridad', 'Servicio de transporte', ]\n];\n\nconst InternshipForm = ( { form } ) => {\n  const [ currentSpecifics, setCurrentSpecifics ] = useState( [] );\n  const [ showInstitutionalAgreementFields, setShowInstitutionalAgreementFields ] = useState( false );\n  const [ showResearchProjectFields, setShowResearchProjectFields ] = useState( false );\n  const [ showSocialProjectFields, setShowSocialProjectFields ] = useState( false );\n\n  const disabledDate = ( current ) => current && current > moment().endOf( 'day' );\n  const handleChangeWideField = ( value ) => {\n    form.setFieldsValue( { specific_field: null } );\n    setCurrentSpecifics( specificFields[ wideFields.indexOf( value ) ] );\n  };\n\n  return (\n    <Form\n      { ...formItemLayout }\n      name='internship'\n      // onFinish={ onSubmit }\n      form={ form }\n      // initialValues={ props.internship }\n    >\n      <Form.Item name='type' label='Tipo' rules={ [\n        {\n          required: true,\n          message: 'Selecciona el tipo de prácticas.'\n        },\n      ] }>\n        <Select placeholder='Selecciona...'>\n          <Option value='laboral'>Laboral</Option>\n          <Option value='servicio a la comunidad'>Servicio a la comunidad</Option>\n        </Select>\n      </Form.Item>\n\n      <Form.Item name='wide_field' label='Campo amplio' rules={ [\n        {\n          required: true,\n          message: 'Selecciona el campo amplio.'\n        },\n      ] }>\n        <Select placeholder='Selecciona...' onChange={ handleChangeWideField }>\n          { wideFields.map( ( wide ) => <Option key={ wide } value={ wide }>{ wide }</Option> ) }\n        </Select>\n      </Form.Item>\n\n      <Form.Item name='specific_field' label='Campo específico' rules={ [\n        {\n          required: true,\n          message: 'Selecciona el campo amplio.'\n        },\n      ] }>\n        <Select placeholder='Selecciona...'>\n          { currentSpecifics.map( ( specific ) => <Option key={ specific } value={ specific }>{ specific }</Option> ) }\n        </Select>\n      </Form.Item>\n\n      <Form.Item name='start_date' label='Fecha de inicio' rules={ [\n        {\n          required: true,\n          message: 'Ingresa la fecha de inicio.'\n        },\n      ] }>\n        <DatePicker format='DD/MM/YYYY'\n                    inputReadOnly\n                    disabledDate={ disabledDate } />\n      </Form.Item>\n\n      <Form.Item name='student_activities'\n                 label='Actividades:'\n                 rules={ [\n                   {\n                     required: true,\n                     whitespace: true,\n                     message: 'Detalla las actividades que desarrollarás durante las prácticas.',\n                   },\n                 ] }>\n        <Input.TextArea placeholder='Detalla las actividades que desarrollarás durante las prácticas.'\n                        autoSize={ { maxRows: 4 } } />\n      </Form.Item>\n\n      <Form.Item label='Convenio institucional'>\n        <Switch onChange={ ( checked ) => setShowInstitutionalAgreementFields( checked ) } />\n      </Form.Item>\n      {\n        showInstitutionalAgreementFields &&\n        <>\n          <Form.Item name='institutional_agreement_code' label='Código' rules={ [\n            {\n              required: true,\n              whitespace: true,\n              message: 'Ingresa código del convenio institucional.'\n            }\n          ] }\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item name='institutional_agreement_name' label='Nombre' rules={ [\n            {\n              required: true,\n              whitespace: true,\n              message: 'Ingresa nombre del convenio institucional.'\n            }\n          ] }>\n            <Input />\n          </Form.Item>\n        </>\n      }\n\n      <Form.Item label='Proyecto de investigación'>\n        <Switch onChange={ ( checked ) => setShowResearchProjectFields( checked ) } />\n      </Form.Item>\n      {\n        showResearchProjectFields &&\n        <>\n          <Form.Item name='research_project_code' label='Código' rules={ [\n            {\n              required: true,\n              whitespace: true,\n              message: 'Ingresa código del proyecto de investigación.'\n            }\n          ] }\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item name='research_project_name' label='Nombre' rules={ [\n            {\n              required: true,\n              whitespace: true,\n              message: 'Ingresa nombre del proyecto de investigación.'\n            }\n          ] }>\n            <Input />\n          </Form.Item>\n        </>\n      }\n\n      <Form.Item label='Proyecto de vinculación'>\n        <Switch onChange={ ( checked ) => setShowSocialProjectFields( checked ) } />\n      </Form.Item>\n      {\n        showSocialProjectFields &&\n        <>\n          <Form.Item name='social_project_code' label='Código' rules={ [\n            {\n              required: true,\n              whitespace: true,\n              message: 'Ingresa código del proyecto de vinculación.'\n            }\n          ] }\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item name='social_project_name' label='Nombre' rules={ [\n            {\n              required: true,\n              whitespace: true,\n              message: 'Ingresa nombre del proyecto de vinculación.'\n            }\n          ] }>\n            <Input />\n          </Form.Item>\n        </>\n      }\n    </Form>\n  );\n};\n\nexport default InternshipForm;\n","/**\n * Created by chalosalvador on 9/14/20\n */\nimport React from 'react';\nimport { Form, Input, Select } from 'antd';\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 18 },\n    sm: { span: 6 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 20 },\n  },\n};\n\nconst RepresentativeForm = ( { form, onSubmit, representative } ) => {\n  return (\n    <Form\n      { ...formItemLayout }\n      name='representative'\n      onFinish={ onSubmit }\n      form={ form }\n      initialValues={ representative }\n    >\n      <Form.Item name='name' label='Nombre' rules={ [\n        {\n          required: true,\n          message: 'Ingresa el nombre.'\n        }\n      ] }>\n        <Input />\n      </Form.Item>\n\n      <Form.Item name='lastname' label='Apellido' rules={ [\n        {\n          required: true,\n          message: 'Ingresa el apellido.'\n        }\n      ] }>\n        <Input />\n      </Form.Item>\n\n      <Form.Item name='job_title' label='Cargo' rules={ [\n        {\n          required: true,\n          message: 'Ingresa el cargo que tiene en la empresa.'\n        }\n      ] }>\n        <Input />\n      </Form.Item>\n\n      <Form.Item name='email' label='Correo' rules={ [\n        {\n          required: true,\n          message: 'Ingresa el correo del representante.'\n        },\n        {\n          type: 'email',\n          message: 'Ingresa un correo electrónico válido.'\n        }\n      ] }>\n        <Input />\n      </Form.Item>\n\n      <Form.Item name='phone' label='Teléfono 1' rules={ [\n        {\n          required: true,\n          message: 'Ingresa un número de contacto.'\n        },\n        {\n          pattern: new RegExp( '^\\\\d{7,}$' ),\n          message: 'Ingresa un número de teléfono válido.'\n        }\n      ] }>\n        <Input />\n      </Form.Item>\n\n      <Form.Item name='mobile' label='Teléfono 2' rules={ [\n        {\n          pattern: new RegExp( '^\\\\d{7,}$' ),\n          message: 'Ingresa un número de teléfono válido.'\n        }\n      ] }>\n        <Input />\n      </Form.Item>\n\n      <Form.Item name='sex' label='Género' rules={ [\n        {\n          required: true,\n          message: 'Selecciona el género.'\n        },\n      ] }>\n        <Select placeholder='Selecciona...'>\n          <Option value='male'>Masculino</Option>\n          <Option value='female'>Femenino</Option>\n        </Select>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default RepresentativeForm;\n","/**\n * Created by chalosalvador on 9/14/20\n */\nimport React, { useState } from 'react';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Button, Col, Divider, Form, Modal, Row, Select, Typography } from 'antd';\nimport RepresentativeForm from './RepresentativeForm';\n\nconst { confirm } = Modal;\nconst { Title } = Typography;\nconst { Option } = Select;\n\nconst RepresentativeStep = ( { representatives, form } ) => {\n  const [ viewNewForm, setViewNewForm ] = useState( false );\n  const toggleForm = () => {\n    if( viewNewForm ) {\n      confirm( {\n          title: '¿Confirmas que deseas cancelar este formulario?',\n          icon: <ExclamationCircleOutlined />,\n          content: 'Se perderá toda la información ingresada.',\n          okText: 'Sí',\n          cancelText: 'No',\n          onOk: async() => {\n            form.resetFields();\n            setViewNewForm( prevState => !prevState );\n          },\n          onCancel() {},\n        }\n      );\n    } else {\n      form.resetFields();\n      setViewNewForm( prevState => !prevState );\n    }\n  };\n\n  return <>\n    {\n      !viewNewForm\n        ? <>\n          <Form form={ form }>\n            <Divider>\n              <Title level={ 5 }>Selecciona el representante de la empresa que te acompañará durante las prácticas</Title>\n            </Divider>\n            <Form.Item name='id' label='Representante' rules={ [\n              {\n                required: true,\n                message: 'Selecciona un representante'\n              }\n            ] }>\n              <Select>\n                {\n                  representatives && representatives.map( ( representative ) => (\n                      <Option key={ representative.id }\n                              value={ representative.id }>\n                        { `${ representative.name } ${ representative.lastname }` }\n                      </Option>\n                    )\n                  )\n                }\n              </Select>\n            </Form.Item>\n          </Form>\n\n          <Row justify='center'>\n            <Col>\n              <Button type='primary' onClick={ toggleForm }>Deseo agregar un representante</Button>\n            </Col>\n          </Row>\n        </>\n        : <>\n          <Row justify='center' style={ { marginBottom: 40 } }>\n            <Col>\n              <Button type='primary' onClick={ toggleForm }>Deseo seleccionar un representante</Button>\n            </Col>\n          </Row>\n\n          <Divider><Title level={ 5 }>Agregar un representante de la empresa</Title></Divider>\n\n          <RepresentativeForm form={ form } />\n        </>\n    }\n  </>;\n};\n\nexport default RepresentativeStep;\n","/**\n * Created by chalosalvador on 9/14/20\n */\nimport React, { useState } from 'react';\nimport CompanyForm from './CompanyForm';\nimport API from '../data';\nimport { Alert, Button, Col, Form, Input, Row } from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 18 },\n    sm: { span: 6 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 20 },\n  },\n};\n\nconst CompanyStep = ( { form, onSubmit } ) => {\n  const [ company, setCompany ] = useState( null );\n  const [ isLoadingCompany, setIsLoadingCompany ] = useState( false );\n  const [ foundCompany, setFoundCompany ] = useState( false );\n\n  const handleCheckCompany = async() => {\n    await form.validateFields( [ 'ruc' ] );\n    try {\n      setIsLoadingCompany( true );\n      const companyFound = await API.get( `/companies/ruc/${ form.getFieldValue( 'ruc' ) }` );\n      console.log( 'company found', companyFound.data );\n      setCompany( companyFound.data );\n      form.setFieldsValue( companyFound.data );\n      setFoundCompany( true );\n    } catch( e ) {\n      console.log( 'e', e );\n      setCompany( {} );\n      form.resetFields( [ 'name', 'type', 'address', 'phone', 'mobile', 'email', 'city' ] );\n      setFoundCompany( false );\n    }\n    setIsLoadingCompany( false );\n  };\n\n  const handleResetCompany = () => {\n    setCompany( null );\n    form.resetFields( [ 'name', 'type', 'address', 'phone', 'mobile', 'email', 'city' ] );\n    setFoundCompany( false );\n  };\n\n  return (\n    <>\n      <Form\n        { ...formItemLayout }\n        name='company-step'\n        form={ form }\n      >\n        <Form.Item label='RUC' required>\n          <Form.Item label='RUC' name='ruc' noStyle\n                     placeholder='Ingresa el RUC de la empresa donde realizarás tus prácticas'\n                     rules={ [\n                       {\n                         required: true,\n                         whitespace: true,\n                         message: 'Ingresa el ruc de la empresa.'\n                       }\n                     ] }>\n            <Input disabled={ foundCompany } style={ { width: 160 } } />\n          </Form.Item>\n          {\n            !foundCompany\n              ? <Button onClick={ handleCheckCompany } loading={ isLoadingCompany }>Verificar</Button>\n              : <Button onClick={ handleResetCompany }>Cambiar</Button>\n          }\n        </Form.Item>\n      </Form>\n\n      {\n        company &&\n        <>\n          {\n            !foundCompany\n              ? <CompanyForm form={ form } />\n              : (\n                <>\n                  <Row justify='center'>\n                    <Col span={ 12 }>\n                      <Alert message='Esta empresa ya está registrada en el sistema, puedes continuar al siguiente paso.'\n                             type='info'\n                             showIcon />\n                    </Col>\n                  </Row>\n\n                  <Form\n                    { ...formItemLayout }\n                    name='company'\n                    form={ form }\n                  >\n                    <Form.Item hidden name='id' rules={ [ { required: true } ] }><Input /></Form.Item>\n                    <Form.Item hidden name='representatives' rules={ [ { required: true } ] }><Input /></Form.Item>\n                    <Form.Item label='Nombre'>{ company.name }</Form.Item>\n                    <Form.Item label='Dirección'>{ company.address }</Form.Item>\n                    <Form.Item label='Ciudad'>{ company.city }</Form.Item>\n                    <Form.Item label='Correo'>{ company.email }</Form.Item>\n                    <Form.Item label='Teléfono 1'>{ company.phone }</Form.Item>\n                    <Form.Item label='Teléfono 2'>{ company.mobile }</Form.Item>\n                    <Form.Item label='Tipo'>{ company.type }</Form.Item>\n                  </Form>\n                </>\n              )\n          }\n        </>\n\n      }\n    </>\n  );\n};\n\nexport default CompanyStep;\n","/**\n * Created by chalosalvador on 9/12/20\n */\nimport React, { useState } from 'react';\nimport { Form, Divider, Row, Col, Steps, Button, message, Modal, Result } from 'antd';\nimport CompanyForm from './CompanyForm';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport API from '../data';\nimport { mutate } from 'swr';\nimport ErrorList from './ErrorList';\nimport { translateMessage } from '../utils/translateMessage';\nimport InternshipForm from './InternshipForm';\nimport RepresentativeStep from './RepresentativeStep';\nimport CompanyStep from './CompanyStep';\nimport moment from 'moment';\n\nconst { Step } = Steps;\nconst { confirm } = Modal;\n\nconst InternshipFormSteps = ( { internship, ...props } ) => {\n  const [ companyForm ] = Form.useForm();\n  const [ representativeForm ] = Form.useForm();\n  const [ internshipForm ] = Form.useForm();\n  const [ current, setCurrent ] = useState( 0 );\n  const [ isSubmitting, setIsSubmitting ] = useState( false );\n  const [ finished, setFinished ] = useState( false );\n\n  const steps = [\n    {\n      title: 'Empresa',\n      content: <CompanyStep form={ companyForm } />,\n      form: companyForm\n    }, {\n      title: 'Responsable',\n      content: <RepresentativeStep representatives={ companyForm.getFieldValue( 'representatives' ) }\n                                   form={ representativeForm } />,\n      form: representativeForm\n    }, {\n      title: 'Práctica',\n      content: <InternshipForm form={ internshipForm } />,\n      form: internshipForm\n    },\n  ];\n\n  const next = async() => {\n    try {\n      const values = await steps[ current ].form.validateFields();\n      console.log( 'values', values );\n      setCurrent( ( prevState ) => prevState + 1 );\n    } catch( e ) {\n      console.log( 'next error', e );\n    }\n  };\n  const prev = () => setCurrent( ( prevState ) => prevState - 1 );\n\n  const handleCreate = async() => {\n    // try {\n    const values = await steps[ current ].form.validateFields();\n    confirm( {\n        title: '¿Confirmas que deseas enviar el formulario?',\n        icon: <ExclamationCircleOutlined />,\n        // content: 'Se perderá toda la información ingresada.',\n        okText: 'Sí',\n        cancelText: 'No',\n        onOk: async() => {\n          console.log( 'values', values );\n          const messageKey = 'saving-status';\n          try {\n            setIsSubmitting( true );\n            const companyData = companyForm.getFieldsValue();\n            const representativeData = representativeForm.getFieldsValue();\n            const internshipData = internshipForm.getFieldsValue();\n            let companyId = companyData.id;\n\n            if( !companyId ) {\n              // crear empresa\n              message.loading( {\n                content: 'Guardando los datos de la empresa...',\n                key: messageKey\n              } );\n              const company = await API.post( '/companies', companyData );\n              companyId = company.data.id;\n              console.log( 'company created', company );\n            }\n\n            let representativeId = representativeData.id;\n            if( !representativeId ) {\n              // crear representante\n              message.loading( {\n                content: 'Guardando los datos del representante...',\n                key: messageKey\n              } );\n              const representative = await API.post( `/companies/${ companyId }/representatives`, representativeData );\n              representativeId = representative.data.id;\n              console.log( 'representative created', representative );\n            }\n\n            // crear practica\n            message.loading( {\n              content: 'Guardando los datos de la práctica...',\n              key: messageKey\n            } );\n            internshipData.representative_id = representativeId;\n            internshipData.start_date = moment( internshipData.start_date ).format( 'YYYY-MM-DD' );\n            const internship = await API.post( '/internships', internshipData );\n            await mutate( `/internships?page=1` );\n\n            message.success( {\n              content: '¡Listo!',\n              key: messageKey\n            } );\n            console.log( 'intershipcreated', internship );\n\n            companyForm.resetFields();\n            representativeForm.resetFields();\n            internshipForm.resetFields();\n            //props.onFinish();//setShowModal( false );\n            setFinished( true );\n          } catch( e ) {\n            const errorList = e.error && <ErrorList errors={ e.error } />;\n            message.error( {\n              content: <>{ translateMessage( e.message ) }{ errorList }</>,\n              key: messageKey\n            } );\n          }\n          setIsSubmitting( false );\n        },\n        onCancel() {},\n      }\n    );\n    // } catch( e ) {\n    //\n    // }\n  };\n\n  const handleEdit = async( values ) => {\n    confirm( {\n        title: '¿Confirmas que deseas enviar el formulario?',\n        icon: <ExclamationCircleOutlined />,\n        // content: 'Se perderá toda la información ingresada.',\n        okText: 'Sí',\n        cancelText: 'No',\n        onOk: async() => {\n          console.log( 'values', values );\n          try {\n            setIsSubmitting( true );\n            await API.put( `/internships/${ internship.id }`, values );\n\n            await mutate( `/internships/${ internship.id }` );\n            await mutate( `/internships` );\n            companyForm.resetFields();\n            message.success( 'La solicitud de prácticas se ha modificado correctamente.' );\n          } catch( e ) {\n            const errorList = e.error && <ErrorList errors={ e.error } />;\n            message.error( <>{ translateMessage( e.message ) }{ errorList }</> );\n          }\n          setIsSubmitting( false );\n        },\n        onCancel() {},\n      }\n    );\n  };\n\n  return (\n    <>\n      {\n        !finished\n          ? <>\n            <Steps current={ current } style={ { marginBottom: 40 } }>\n              {\n                steps.map( ( step, i ) => (\n                    <Step key={ `step-${ i }` } title={ step.title } />\n                  )\n                )\n              }\n            </Steps>\n\n            {\n              steps.map( ( step, i ) => (\n                  <div key={ `step-content-${ i }` } hidden={ i !== current }>\n                    { steps[ i ].content }\n                  </div>\n                )\n              )\n            }\n            {/*</Form.Provider>*/ }\n\n            <Divider />\n            <Row justify='between'>\n              <Col span={ 12 }>\n                { current > 0 && <Button onClick={ prev }>Anterior</Button> }\n              </Col>\n              <Col span={ 12 } align='right'>\n                { current < steps.length - 1 && <Button type='primary' onClick={ next }>Siguiente</Button> }\n                { current === steps.length - 1 &&\n                <Button type='primary' onClick={ handleCreate }>Enviar solicitud</Button> }\n              </Col>\n            </Row>\n          </>\n          : <Result\n            status='success'\n            title='¡Los datos de la práctica se han guardado correctamente!'\n            subTitle='Antes de poder registrar tus reportes, la práctica debe ser autorizada por la ESFOT.'\n            extra={ [\n              <Button type='primary' key='console' onClick={ () => props.onFinish() }>\n                ¡Entendido!\n              </Button>\n            ] }\n          />\n      }\n    </>\n  );\n};\n\nexport default InternshipFormSteps;\n","/**\n * Created by chalosalvador on 9/12/20\n */\nimport React, { useState } from 'react';\nimport { Row, Col, Button, Modal, Form, message } from 'antd';\nimport { EditOutlined, PlusOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport API from '../data';\nimport ErrorList from './ErrorList';\nimport { translateMessage } from '../utils/translateMessage';\nimport { mutate } from 'swr';\nimport InternshipFormSteps from './InternshipFormSteps';\n\nconst { confirm } = Modal;\n\nconst InternshipFormModal = ( { internship, edit } ) => {\n  const [ showModal, setShowModal ] = useState( false );\n\n  const handleCancel = () => {\n    confirm( {\n      title: '¿Confirmas que deseas cerrar el formulario?',\n      icon: <ExclamationCircleOutlined />,\n      content: 'Se perderá toda la información ingresada.',\n      okText: 'Sí',\n      cancelText: 'No',\n      onOk() {\n        // form.resetFields();\n        setShowModal( false );\n      },\n      onCancel() {},\n    } );\n  };\n\n  return (\n    <>\n      {\n        <Row>\n          <Col align='right'>\n            {\n              !edit\n                ? <Button type='primary'\n                          style={ { marginBottom: 20 } }\n                          onClick={ () => setShowModal( true ) }\n                          icon={ <PlusOutlined /> }>Nueva solicitud de práctica</Button>\n                : <Button onClick={ () => setShowModal( true ) }\n                          icon={ <EditOutlined /> }>Editar</Button>\n            }\n          </Col>\n        </Row>\n      }\n\n      <Modal\n        title={ `${ !edit\n          ? 'Nueva'\n          : 'Editar' } solicitud de prácticas` }\n        visible={ showModal }\n        // closable={ false }\n        maskClosable={ false }\n        // confirmLoading={ isSubmitting }\n        // okText='Enviar solicitud'\n        // cancelText={ 'Cancelar' }\n        onCancel={ handleCancel }\n        // onOk={ () => form.submit() }\n        footer={ null }\n        width={ 800 }\n        destroyOnClose={ true }>\n        {\n          !edit\n            ? <InternshipFormSteps onFinish={ () => setShowModal( false ) } />\n            : <InternshipFormSteps onFinish={ () => setShowModal( false ) } internship={ internship } />\n        }\n      </Modal>\n    </>\n  );\n};\n\nexport default InternshipFormModal;\n","/**\n * Created by chalosalvador on 9/11/20\n */\nimport React from 'react';\nimport { Statistic, Row, Col, Typography, Divider } from 'antd';\nimport { CheckCircleTwoTone, CloseCircleTwoTone, ClockCircleTwoTone } from '@ant-design/icons';\nimport InternshipsList from './InternshipsList';\nimport { useAuth } from '../providers/Auth';\nimport withAuth from '../hocs/withAuth';\nimport ReportStudentSectionFormModal from './ReportStudentSectionFormModal';\nimport InternshipFormModal from './InternshipFormModal';\n\nconst { Title } = Typography;\nconst HomeStudent = () => {\n  const { currentUser } = useAuth();\n  return (\n    <div>\n\n      <Row justify='center'>\n        <Col span={ 3 } style={ { textAlign: 'center' } }>\n          <Statistic title='Horas registradas'\n                     value={ currentUser.hours_registered }\n                     prefix={ <CheckCircleTwoTone twoToneColor='#52c41a' /> } />\n        </Col>\n        <Col span={ 3 } style={ { textAlign: 'center' } }>\n          <Statistic title='Horas aprobadas'\n                     value={ currentUser.hours_approved }\n                     prefix={ <CheckCircleTwoTone twoToneColor='#1890ff' /> } />\n        </Col>\n        <Col span={ 3 } style={ { textAlign: 'center' } }>\n          <Statistic title='Horas pendientes'\n                     value={ currentUser.hours_pending }\n                     prefix={ <ClockCircleTwoTone twoToneColor='#fa8c16' /> } />\n        </Col>\n        <Col span={ 3 } style={ { textAlign: 'center' } }>\n          <Statistic title='Horas rechazadas'\n                     value={ currentUser.hours_rejected }\n                     prefix={ <CloseCircleTwoTone twoToneColor='#f5222d' /> } />\n        </Col>\n      </Row>\n\n\n      <Divider><Title>Prácticas preprofesionales realizadas</Title></Divider>\n\n      <InternshipFormModal />\n      <InternshipsList />\n    </div>\n  );\n};\n\nexport default withAuth( HomeStudent );\n","/**\n * Created by chalosalvador on 9/11/20\n */\nimport React from 'react';\nimport InternshipsList from './InternshipsList';\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\nconst HomeRepresentative = () => {\n  return (\n    <div>\n      <Title>Lista de pasantes a cargo</Title>\n      <InternshipsList />\n    </div>\n  );\n};\n\nexport default HomeRepresentative;\n","/**\n * Created by chalosalvador on 9/11/20\n */\nimport React from 'react';\nimport HomeAdministrative from '../components/HomeAdministrative';\nimport { useAuth } from '../providers/Auth';\nimport withAuth from '../hocs/withAuth';\nimport HomeTeacher from '../components/HomeTeacher';\nimport HomeStudent from '../components/HomeStudent';\nimport HomeRepresentative from '../components/HomeRepresentative';\n\nconst HomePage = () => {\n  const { currentUser } = useAuth();\n  console.log( 'currentUser', currentUser );\n  return (\n    <div>\n      {\n        currentUser.role === 'ROLE_ADMINISTRATIVE'\n          ? <HomeAdministrative />\n          : currentUser.role === 'ROLE_TEACHER'\n          ? <HomeTeacher />\n          : currentUser.role === 'ROLE_STUDENT'\n            ? <HomeStudent />\n            : <HomeRepresentative />\n      }\n    </div>\n  );\n};\n\nexport default withAuth( HomePage );\n","/**\n * Created by chalosalvador on 17/01/19.\n */\n\nexport const translateMessage = ( type, params = {} ) => {\n\n  const messageList = {\n    'invalid_credentials': 'Usuario o clave incorrectos',\n    'The given data was invalid.': 'Datos no válidos',\n    'token_expired': 'Tu sesión ha expirado',\n    'PERMISSION_DENIED': 'No tienes permiso para realizar esta acción',\n    'auth/internal-error': 'hmmm... Algo salió mal y no lo teníamos previsto, por favor vuelve a intentarlo.',\n    'auth/argument-error': 'La URL de activación no es válida.',\n    'auth/invalid-user-token': '',\n    'auth/invalid-api-key': '',\n    'auth/network-request-failed': 'Parece que no estás conectado a Internet, por favor asegúrate de estar conectado e inténtalo de nuevo.',\n    'auth/operation-not-allowed': '',\n    'auth/requires-recent-login': 'Por favor vuelve a iniciar sesión para completar esta acción.',\n    'auth/user-token-expired': '',\n    'auth/web-storage-unsupported': '',\n    'auth/email-sent': `Se ha enviado el correo de verificación a ${params.email}. Por favor revisa tu bandeja de entrada.`,\n    'auth/reset-password-email-sent': `Se ha enviado un correo para restablecer la contraseña a ${params.email}. Por favor revisa tu bandeja de entrada.`,\n    'auth/reset-password-success': 'Tu contraseña ha sido cambiada con éxito, enseguida serás redirigido para que inicies sesión..',\n    'auth/change-password-success': 'Tu contraseña ha sido cambiada con éxito.',\n    'auth/account-verified': 'Felicidades, has activado tu cuenta, por favor inicia sesión.',\n    'auth/invalid-action-code': 'El código de activación ha caducado o ya ha sido utilizado.',\n    'auth/expired-action-code': 'El código de activación ha caducado.',\n    'auth/user-disabled': 'Este usuario se encuentra deshabilitado.',\n    'auth/user-not-found': 'No existe un usuario registrado con el email proporcionado.',\n    'auth/wrong-password': 'Usuario o contraseña incorrectos.',\n    'auth/weak-password': 'La contraseña se considera muy débil, por favor ingresa una contraseña más fuerte.',\n    'auth/popup-closed-by-user': 'La ventana de inicio de sesión fue cerrada por el usuario.',\n    'auth/account-exists-with-different-credential': 'Este correo electrónico se encuentra registrado pero con otras credenciales, por favor intenta iniciar sesión con otro método.',\n    'auth/account-exists-with-different-role': `Este correo electrónico se encuentra registrado pero con el perfil de \"${params.role}\", se ha iniciado sesión con este perfil, pronto podrás registrarte con ambos perfiles en Profe a Tiempo.`,\n    'auth/email-already-in-use': 'Este correo electrónico ya está en uso.',\n    'auth/requires-login': 'Por favor inicia sesión para completar esta acción.',\n    'auth/invalid-email': 'Correo electrónico no válido.',\n    'auth/too-many-requests': 'Ups... esas son muchas peticiones en muy poco tiempo, espera unos segundos y vuelve a intentarlo.',\n    'profile/profile-saved-success': 'Los datos de tu perfil se han guardado con éxito.',\n    'profile/save-teacher-data-error': 'Ocurrió un error al guardar la información del perfil del profesor.',\n    'profile/save-student-data-error': 'Ocurrió un error al guardar la información del perfil del estudiante.',\n    'profile/not-completed-profile': 'Debes completar tu perfil para realizar esta acción.',\n    'profile/not-active-teacher': 'Aún no eres un profe activo, asegúrate de haber completado el proceso de entrevista y aceptar el acuerdo de responsabilidad para ser activado.',\n    'profile/not-accepted-teacher': 'Aún no eres un profe aceptado, asegúrate de haber aprobado la etapa de entrevistas.',\n    'profile/subscription-created-success': 'Gracias! se ha registrado tu infomación de pago, ahora puedes empezar a solicitar clases.',\n    'profile/subscription-updated-success': 'Gracias! se ha actualizado tu infomación de pago, puedes continuar solicitando clases.',\n    'profile/subscription-error': 'Ocurrió un error al registrar tu tarjeta, por favor asegúrate que los datos son correctos e inténtalo de nuevo.',\n    'class-request/save-class-request-data-success': 'Se ha enviado tu solicitud de clase, te notificaremos tan pronto como te asignemos un profe.',\n    'class-request/save-class-request-data-error': 'Ocurrió un error al guardar la información de la solicitud.',\n    'class-request/complete-profile-first': 'Debes completar tu perfil para empezar a solicitar clases.',\n    'class-request/must-be-student-to-request-class': 'Debes estar registrado como estudiante para solicitar clases.',\n    'class-request/request-expired': 'La solicitud a expirado.',\n    'class-request/request-not-available': 'Otro profesor ya ha aceptado esta clase, puedes buscar más clases en la lista.',\n    'class-request/teacher-assignation-success': 'Se te ha asignado esta clase, por favor ponte en contacto con el estudiante.',\n    'class-request/teacher-assignation-error': 'Ocurrió un error al asignarte esta clase, por favor inténtalo de nuevo o busca otra clase.',\n    'class-request/teacher-data-details': 'No tienes un profe asiganado todavía',\n    'class-evaluation/cannot-evaluate-class-yet': 'Aún no puedes calificar esta clase.',\n    'class-evaluation/class-already-evaluated': 'Ya has calificado esta clase.',\n    'class-evaluation/save-teacher-evaluation-success': 'Gracias por calificar a tu profesor.',\n    'class-evaluation/save-teacher-evaluation-error': 'No se pudo guardar la calificación del profesor, por favor inténtalo nuevamente.',\n    'class-evaluation/save-student-evaluation-success': 'Gracias por calificar a tu estudiante.',\n    'class-evaluation/save-student-evaluation-error': 'No se pudo guardar la calificación del estudiante, por favor inténtalo nuevamente.',\n    'search-request/complete-process-first': 'Debes completar el proceso de selección para poder aceptar una clase.',\n    'teacher-evaluation/argument-error': 'La función debe ser llamada con un argumento \"teacherId\".'\n  };\n\n  return messageList[ type ] || type;\n};\n","import { List } from 'antd';\nimport React from 'react';\n\nconst ErrorList = ( { errors } ) => <List size='small'\n                                          dataSource={ Object.values( errors )\n                                            .map( ( errorMessage ) => errorMessage ) }\n                                          renderItem={ item => <List.Item>{ item }</List.Item> }\n/>;\n\nexport default ErrorList;\n","import React from 'react';\nimport { Button, Result } from 'antd';\nimport { translateMessage } from '../utils/translateMessage';\nimport Routes from '../constants/routes';\n\nconst setStatus = ( status ) => {\n  switch( status ) {\n    case 403:\n    case 401:\n      return 403;\n    case 500:\n      return 500;\n    case 404:\n      return 404;\n    default:\n      return 'error';\n  }\n};\n\nconst ShowError = ( { error } ) => {\n  console.log( 'props', error.error );\n  return (\n    <Result status={ setStatus( error.status ) }\n            title={ translateMessage( error.error ) }\n            subTitle={translateMessage(error.message)}\n            extra={ <Button type='primary'>Back Home</Button> } />\n  );\n};\n\nexport default ShowError;\n","/**\n * Created by chalosalvador on 9/11/20\n */\nimport React, { useState } from 'react';\nimport { Alert, Form, Button, Input, DatePicker, InputNumber } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { useAuth } from '../providers/Auth';\n\nconst { RangePicker } = DatePicker;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 18 },\n    sm: { span: 6 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 20 },\n  },\n};\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 18,\n      offset: 6\n    },\n  },\n};\n\nconst ReportStudentSectionForm = ( { form, onSubmit, ...props } ) => {\n  const { currentUser } = useAuth();\n  const [ isFinalReport, setIsFinalReport ] = useState( false );\n\n  const disabledDate = ( current ) => current && current > moment().endOf( 'day' );\n  const handleChangeHoursWorked = ( hours ) => {\n    const total_hours = currentUser.hours_registered + currentUser.hours_approved;\n    const sum_hours = total_hours + hours;\n    setIsFinalReport( sum_hours >= 480 );\n    form.setFieldsValue( {\n      type: sum_hours > 480\n        ? 'final'\n        : 'partial'\n    } );\n  };\n\n  return (\n    <Form\n      { ...formItemLayout }\n      onFinish={ onSubmit }\n      form={ form }\n      name='report'\n      initialValues={ !props.report\n        ? {\n          activities: [ '' ],\n          type: 'partial'\n        }\n        : {\n          ...props.report,\n          dates: [ moment( props.report.from_date ), moment( props.report.to_date ) ],\n          activities: props.report.activities.length > 0\n            ? props.report.activities.map( ( activity ) => activity.description )\n            : [ '' ]\n        } }\n    >\n      <Form.Item name='dates' label='Fechas' rules={ [\n        {\n          required: true,\n          message: 'Ingresa las fechas incluidas en este reporte'\n        },\n\n      ] }>\n        <RangePicker placeholder={ [ 'Inicio', 'Fin' ] }\n                     inputReadOnly\n                     disabledDate={ disabledDate }\n                     format='DD/MM/YYYY' />\n      </Form.Item>\n\n      <Form.Item label='Área' name='area' rules={ [\n        {\n          required: true,\n          whitespace: true,\n          message: 'Selecciona el área de la empresa donde desarrollaste tus actividades.'\n        }\n      ] }>\n        <Input />\n      </Form.Item>\n\n      <Form.Item label='Horas' name='hours_worked'\n                 rules={ [\n                   {\n                     required: true,\n                     message: 'Ingresa la cantidad de horas que vas a reportar.'\n                   },\n                   {\n                     type: 'number',\n                     min: 1,\n                     message: 'Ingresa un valor numérico.'\n                   },\n                 ] }\n                 extra={\n                   isFinalReport && <Alert message='Reporte final de prácticas'\n                                           description='Tus horas de prácticas llegan o superan las 480 horas requeridas por lo que este será tu reporte final.'\n                                           type='info' showIcon />\n                 }>\n        <InputNumber style={ { width: '100%' } } onChange={ handleChangeHoursWorked } />\n      </Form.Item>\n\n      <Form.Item name='type' hidden\n                 rules={ [\n                   {\n                     required: true,\n                     message: 'El tipo de reporte no es válido.'\n                   },\n                   {\n                     enum: [ 'partial', 'final' ],\n                     message: 'El tipo de reporte no es válido.'\n                   },\n                 ] }\n                 >\n        <InputNumber style={ { width: '100%' } } onChange={ handleChangeHoursWorked } />\n      </Form.Item>\n\n      <Form.List name='activities'>\n        { ( fields, { add, remove } ) => {\n          return (\n            <div>\n              { fields.map( ( field, index ) => (\n                <Form.Item\n                  { ...(index === 0\n                    ? formItemLayout\n                    : formItemLayoutWithOutLabel) }\n                  label={ index === 0\n                    ? 'Actividades:'\n                    : '' }\n                  required={ true }\n                  key={ field.key }\n                >\n                  <Form.Item\n                    { ...field }\n                    // validateTrigger={ [ 'onChange', 'onBlur' ] }\n                    rules={ [\n                      {\n                        required: true,\n                        whitespace: true,\n                        message: 'Detalla las actividades desarrolladas durante las prácticas.',\n                      },\n                    ] }\n                    noStyle\n                  >\n                    <Input.TextArea placeholder='Descripción de la actividad'\n                                    autoSize={ { maxRows: 4 } }\n                                    style={ { width: '90%' } } />\n                  </Form.Item>\n                  { fields.length > 1\n                    ? (\n                      <MinusCircleOutlined\n                        className='dynamic-delete-button'\n                        style={ { margin: '0 8px' } }\n                        onClick={ () => {\n                          remove( field.name );\n                        } }\n                      />\n                    )\n                    : null }\n                </Form.Item>\n              ) ) }\n              <Form.Item { ...formItemLayoutWithOutLabel }>\n                <Button\n                  type='dashed'\n                  onClick={ () => {\n                    add();\n                  } }\n                  style={ { width: '90%' } }\n                >\n                  <PlusOutlined /> Añadir una actividad\n                </Button>\n              </Form.Item>\n            </div>\n          );\n        } }\n      </Form.List>\n\n      <Form.Item name='student_observations' label='Observaciones:' rules={ [\n        {\n          required: true,\n          whitespace: true,\n          message: 'Detalla las actividades desarrolladas durante las prácticas.',\n        },\n      ] }>\n        <Input.TextArea placeholder='Observaciones sobre las prácticas que ha realizado en la empresa.'\n                        autoSize={ { maxRows: 4 } } />\n      </Form.Item>\n\n      {\n        isFinalReport && <h1>Final</h1>\n      }\n\n    </Form>\n  );\n};\n\nexport default ReportStudentSectionForm;\n","/**\n * Created by chalosalvador on 9/11/20\n */\nimport React, { useState } from 'react';\nimport { Row, Col, Button, Modal, Form, message } from 'antd';\nimport { EditOutlined, PlusOutlined } from '@ant-design/icons';\nimport ReportStudentSectionForm from './ReportStudentSectionForm';\nimport API from '../data';\nimport ErrorList from './ErrorList';\nimport { translateMessage } from '../utils/translateMessage';\nimport { mutate } from 'swr';\nimport moment from 'moment';\n\nconst ReportStudentSectionFormModal = ( { internshipId, report, edit } ) => {\n  const [ form ] = Form.useForm();\n  const [ showModal, setShowModal ] = useState( false );\n  const [ isSubmitting, setIsSubmitting ] = useState( false );\n\n  const handleCreate = async( values ) => {\n    console.log( 'values', values );\n    try {\n      setIsSubmitting( true );\n      await API.post( `/internships/${ internshipId }/internship-reports`, {\n        ...values,\n        from_date: moment( values.dates[ 0 ] ).format( 'YYYY-MM-DD' ),\n        to_date: moment( values.dates[ 1 ] ).format( 'YYYY-MM-DD' ),\n      } );\n\n      await mutate( `/internships/${ internshipId }/internship-reports` );\n      setShowModal( false );\n      form.resetFields();\n      message.success( 'El reporte se ha guardado correctamente.' );\n    } catch( e ) {\n      const errorList = e.error && <ErrorList errors={ e.error } />;\n      message.error( <>{ translateMessage( e.message ) }{ errorList }</> );\n    }\n    setIsSubmitting( false );\n  };\n\n  const handleEdit = async( values ) => {\n    console.log( 'values', values );\n    try {\n      setIsSubmitting( true );\n      await API.put( `/internships/${ report.internship_id }/internship-reports/${ report.id }`, {\n        ...values,\n        from_date: moment( values.dates[ 0 ] ).format( 'YYYY-MM-DD' ),\n        to_date: moment( values.dates[ 1 ] ).format( 'YYYY-MM-DD' ),\n      } );\n\n      await mutate( `/internships/${ report.internship_id }/internship-reports` );\n      await mutate( `/internships/${ report.internship_id }/internship-reports/${ report.id }` );\n      setShowModal( false );\n      form.resetFields();\n      message.success( 'El reporte se ha guardado correctamente.' );\n    } catch( e ) {\n      const errorList = e.error && <ErrorList errors={ e.error } />;\n      message.error( <>{ translateMessage( e.message ) }{ errorList }</> );\n    }\n    setIsSubmitting( false );\n  };\n\n  return (\n    <>\n      {\n        <Row>\n          <Col align='right'>\n            {\n              !edit\n                ? <Button type='primary'\n                          style={ { marginBottom: 20 } }\n                          onClick={ () => setShowModal( true ) }\n                          icon={ <PlusOutlined /> }>Nuevo reporte</Button>\n                : <Button onClick={ () => setShowModal( true ) }\n                          icon={ <EditOutlined /> }>Editar</Button>\n            }\n          </Col>\n        </Row>\n      }\n\n      <Modal\n        title={ `${ !edit\n          ? 'Nuevo'\n          : 'Editar' } reporte de prácticas` }\n        visible={ showModal }\n        closable={ false }\n        maskClosable={ false }\n        okText='Enviar reporte'\n        confirmLoading={ isSubmitting }\n        cancelText={ 'Cancelar' }\n        onCancel={ () => {\n          form.resetFields();\n          setShowModal( false );\n        } }\n        onOk={ () => form.submit() }>\n        {\n          !edit\n            ? <ReportStudentSectionForm form={ form } onSubmit={ handleCreate } internshipId={ internshipId } />\n            : <ReportStudentSectionForm form={ form } onSubmit={ handleEdit } report={ report } />\n        }\n      </Modal>\n    </>\n  );\n};\n\nexport default ReportStudentSectionFormModal;\n"],"sourceRoot":""}